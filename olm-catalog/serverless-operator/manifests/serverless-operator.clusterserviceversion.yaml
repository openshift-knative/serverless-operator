apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    operatorframework.io/suggested-namespace: "openshift-serverless"
    operators.openshift.io/valid-subscription: '["OpenShift Container Platform", "OpenShift Platform Plus"]'
    features.operators.openshift.io/disconnected: "true"
    # Designed for FIPS.
    #
    # Specify whether an Operator accepts the FIPS-140 configuration of the
    # underlying platform and works on nodes that are booted into FIPS mode.
    # In this mode, the Operator and any workloads it manages (operands)
    # are solely calling the Red Hat Enterprise Linux (RHEL) cryptographic
    # library submitted for FIPS-140 validation.
    features.operators.openshift.io/fips-compliant: "true"
    features.operators.openshift.io/proxy-aware: "true"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    features.operators.openshift.io/cni: "false"
    features.operators.openshift.io/cnf: "false"
    features.operators.openshift.io/csi: "false"
    alm-examples: |-
      [
        {
          "apiVersion": "operator.knative.dev/v1beta1",
          "kind": "KnativeServing",
          "metadata": {
            "name": "knative-serving"
          },
          "spec": {
          }
        },
        {
          "apiVersion": "operator.knative.dev/v1beta1",
          "kind": "KnativeEventing",
          "metadata": {
            "name": "knative-eventing"
          },
          "spec": {
          }
        },
        {
          "apiVersion": "operator.serverless.openshift.io/v1alpha1",
          "kind": "KnativeKafka",
          "metadata": {
            "name": "knative-kafka"
          },
          "spec": {
            "broker": {
              "enabled": false,
              "defaultConfig": {
                "numPartitions": 10,
                "replicationFactor": 3,
                "bootstrapServers": "REPLACE_WITH_COMMA_SEPARATED_KAFKA_BOOTSTRAP_SERVERS"
              }
            },
            "source": {
              "enabled": false
            },
            "sink": {
              "enabled": false
            },
            "channel": {
              "enabled": false,
              "bootstrapServers": "REPLACE_WITH_COMMA_SEPARATED_KAFKA_BOOTSTRAP_SERVERS"
            }
          }
        }
      ]
    capabilities: Full Lifecycle
    categories: Networking,Integration & Delivery,Cloud Provider,Developer Tools
    certified: "false"
    createdAt: "2020-04-20T17:00:00Z"
    description: |-
      Deploy and manage event-driven serverless applications and functions using Knative.
    repository: https://github.com/openshift-knative/serverless-operator
    support: Red Hat
    olm.skipRange: '>1.36.1 <1.37.0'
    operators.openshift.io/must-gather-image: registry.redhat.io/openshift-serverless-1/serverless-must-gather-rhel9@sha256:1c65b36d07f9259915705e492b59a244d06da3fad6b17a7be6b49f9728b5fe20
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.ppc64le: supported
    operatorframework.io/arch.s390x: supported
    operatorframework.io/arch.arm64: supported
  name: serverless-operator.v1.37.0
  namespace: placeholder
spec:
  # User-facing metadata
  displayName: Red Hat OpenShift Serverless
  description: |-
    The Red Hat OpenShift Serverless operator provides a collection of APIs that
    enables containers, microservices and functions to run "serverless".
    Serverless applications can scale up and down (to zero) on demand and be triggered by a
    number of event sources. OpenShift Serverless integrates with a number of
    platform services, such as Monitoring and it is based on the open
    source project Knative.

    # Prerequisites
    Knative Serving (and Knative Eventing respectively) can only be installed into the
    `knative-serving` (`knative-eventing`) namespace. These namespaces will be
    automatically created when installing the operator.

    The components provided with the OpenShift Serverless operator require minimum cluster sizes on
    OpenShift Container Platform. For more information, see the documentation on [Getting started
    with OpenShift Serverless](https://docs.redhat.com/en/documentation/red_hat_openshift_serverless/1.37/html/serving/getting-started-with-knative-serving#serverless-applications).

    # Supported Features
    - **Easy to get started:** Provides a simplified developer experience to deploy
      and run cloud native applications on Kubernetes, providing powerful
      abstractions.
    - **Immutable Revisions:** Deploy new features performing canary, A/B or
      blue-green testing with gradual traffic rollout following best practices.
    - **Use any programming language or runtime of choice:** From Java, Python, Go
      and JavaScript to Quarkus, SpringBoot or Node.js.
    - **Automatic scaling:** Removes the requirement to configure numbers of replicas
      or idling behavior. Applications automatically scale to zero when not in use,
      or scale up to meet demand, with built in reliability and fault tolerance.
    - **Event Driven Applications:** You can build loosely coupled, distributed applications
      that can be connected to a variety of either built in or third party event sources,
      powered by operators.
    - **Ready for the hybrid cloud:** Provides true, portable serverless functionality,
      that can run anywhere OpenShift Container Platform runs. You can leverage data
      locality and SaaS as you need it.

    # Components & APIs
    This operator provides the following components:

    ## Knative Serving
    Knative Serving builds on Kubernetes to support deploying and serving of applications and functions as serverless containers.
    Serving simplifies the application deployment, dynamically scales based on in incoming traffic and supports custom rollout strategies with traffic splitting.
    Other features include:
    - Simplified deployment of serverless containers
    - Traffic-based auto-scaling, including scale-to-zero
    - Routing and network programming
    - Point-in-time application snapshots and their configurations

    ## Knative Eventing
    Knative Eventing provides a platform that offers composable primitives to enable late-binding event sources and
    event consumers.
    Knative Eventing supports the following architectural cloud-native concepts:

    - Services are loosely coupled during development and deployed independently to production
    - A producer can generate events before a consumer is listening, and a consumer can express an interest in an event or class of events that are not yet being produced.
    - Services can be connected to create new applications without modifying producer or consumer, and with the ability to select a specific subset of events from a particular producer.

    ## Knative Functions
    Knative Functions allows developers to write functions that let them focus on business logic.
    These functions are deployed as Knative Services and take advantage of Knative Serving and Eventing.
    Knative Functions bring greater efficiency, more scalability and faster development to facilitate rapid go-to-market.

    Other features include:
    - Buildpacks
    - Multiple runtimes, including Node.js, Quarkus and Go
    - Local developer experience through the kn CLI
    - Project templates
    - Support for receiving CloudEvents and plain HTTP requests

    ## Knative CLI `kn`
    The Knative client `kn` allows you to create Knative resources from the command line or from within
    Shell scripts.
    With its extensive help pages and autocompletion support, it frees you from memorizing the detailed structure of the Knative resource schemas.

    `kn` offers you:
    - Full support for managing all features of Knative Serving: Services, Revisions and Routes
    - Support for managing Knative Eventing entities: Sources, Brokers, Triggers, Channels and Subscriptions
    - A kubectl-like plugin architecture to extend the built-in functionality
    - Easy integration of Knative into Tekton pipelines by using `kn` in a Tekton task
    - Create, build and deploy Knative Functions for multiple runtimes, including Node.js, Quarkus, and Go

    # Further Information
    For documentation on OpenShift Serverless, see:
    - [Installation
    Guide](https://docs.redhat.com/en/documentation/red_hat_openshift_serverless/1.37/html/installing_openshift_serverless/index)
    - [Develop Serverless Applications](https://docs.redhat.com/en/documentation/red_hat_openshift_serverless/1.37/html/serving/getting-started-with-knative-serving#serverless-applications)
  icon:
    - base64data: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzOCIgaGVpZ2h0PSIzOCIgdmlld0JveD0iMCAwIDM4IDM4Ij48ZGVmcz48c3R5bGU+LmF7ZmlsbDojZmZmO30uYntmaWxsOiNlMDA7fTwvc3R5bGU+PC9kZWZzPjxwYXRoIGNsYXNzPSJhIiBkPSJNMjgsMUgxMGE5LDksMCwwLDAtOSw5VjI4YTksOSwwLDAsMCw5LDlIMjhhOSw5LDAsMCwwLDktOVYxMGE5LDksMCwwLDAtOS05WiIvPjxwYXRoIGQ9Ik0yOCwyLjI1QTcuNzU4Nyw3Ljc1ODcsMCwwLDEsMzUuNzUsMTBWMjhBNy43NTg3LDcuNzU4NywwLDAsMSwyOCwzNS43NUgxMEE3Ljc1ODcsNy43NTg3LDAsMCwxLDIuMjUsMjhWMTBBNy43NTg3LDcuNzU4NywwLDAsMSwxMCwyLjI1SDI4TTI4LDFIMTBhOSw5LDAsMCwwLTksOVYyOGE5LDksMCwwLDAsOSw5SDI4YTksOSwwLDAsMCw5LTlWMTBhOSw5LDAsMCwwLTktOVoiLz48cGF0aCBjbGFzcz0iYiIgZD0iTTE0LDIzLjQ3NjZIMTBhLjYyNTMuNjI1MywwLDAsMS0uNjI1LS42MjV2LTRhLjYyNTIuNjI1MiwwLDAsMSwuNjI1LS42MjVoNGEuNjI1Mi42MjUyLDAsMCwxLC42MjUuNjI1djRBLjYyNTMuNjI1MywwLDAsMSwxNCwyMy40NzY2Wm0tMy4zNzUtMS4yNWgyLjc1di0yLjc1aC0yLjc1WiIvPjxwYXRoIGNsYXNzPSJiIiBkPSJNMjEsMjMuNDc2NkgxN2EuNjI1My42MjUzLDAsMCwxLS42MjUtLjYyNXYtNGEuNjI1Mi42MjUyLDAsMCwxLC42MjUtLjYyNWg0YS42MjUyLjYyNTIsMCwwLDEsLjYyNS42MjV2NEEuNjI1My42MjUzLDAsMCwxLDIxLDIzLjQ3NjZabS0zLjM3NS0xLjI1aDIuNzV2LTIuNzVoLTIuNzVaIi8+PHBhdGggY2xhc3M9ImIiIGQ9Ik0xNy41LDE2LjQ3NjZoLTRhLjYyNTMuNjI1MywwLDAsMS0uNjI1LS42MjV2LTRhLjYyNTIuNjI1MiwwLDAsMSwuNjI1LS42MjVoNGEuNjI1Mi42MjUyLDAsMCwxLC42MjUuNjI1djRBLjYyNTMuNjI1MywwLDAsMSwxNy41LDE2LjQ3NjZabS0zLjM3NS0xLjI1aDIuNzV2LTIuNzVoLTIuNzVaIi8+PHBhdGggY2xhc3M9ImIiIGQ9Ik0yNC41LDE2LjQ3NjZoLTRhLjYyNTMuNjI1MywwLDAsMS0uNjI1LS42MjV2LTRhLjYyNTIuNjI1MiwwLDAsMSwuNjI1LS42MjVoNGEuNjI1Mi42MjUyLDAsMCwxLC42MjUuNjI1djRBLjYyNTMuNjI1MywwLDAsMSwyNC41LDE2LjQ3NjZabS0zLjM3NS0xLjI1aDIuNzV2LTIuNzVoLTIuNzVaIi8+PHBhdGggY2xhc3M9ImIiIGQ9Ik0yOCwyMy40NzY2SDI0YS42MjUzLjYyNTMsMCwwLDEtLjYyNS0uNjI1di00YS42MjUyLjYyNTIsMCwwLDEsLjYyNS0uNjI1aDRhLjYyNTIuNjI1MiwwLDAsMSwuNjI1LjYyNXY0QS42MjUzLjYyNTMsMCwwLDEsMjgsMjMuNDc2NlptLTMuMzc1LTEuMjVoMi43NXYtMi43NWgtMi43NVoiLz48cGF0aCBkPSJNMjksMjYuNDc2Nkg5YS42MjUuNjI1LDAsMCwxLDAtMS4yNUgyOWEuNjI1LjYyNSwwLDAsMSwwLDEuMjVaIi8+PC9zdmc+
      mediatype: image/svg+xml
  installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - serverless
    - FaaS
    - microservices
    - scale to zero
    - knative
    - serving
    - eventing
    - kafka
  links:
    - name: Documentation
      url: https://docs.redhat.com/en/documentation/red_hat_openshift_serverless/1.37/html/installing_openshift_serverless/index
    - name: Source Repository
      url: https://github.com/openshift-knative/serverless-operator
  maintainers:
    - email: support@redhat.com
      name: Serverless Team
  maturity: stable
  provider:
    name: Red Hat
  minKubeVersion: 1.25.0
  customresourcedefinitions:
    owned:
      - description: A platform for streamlined application deployment, traffic-based auto-scaling from zero to N, and traffic-split rollouts
        displayName: Knative Serving
        kind: KnativeServing
        name: knativeservings.operator.knative.dev
        statusDescriptors:
          - description: The version of Knative Serving installed
            displayName: Version
            path: version
          - description: Conditions of Knative Serving installed
            displayName: Conditions
            path: conditions
            x-descriptors:
              - "urn:alm:descriptor:io.kubernetes.conditions"
        version: v1beta1
      - description: An event-driven application platform that leverages CloudEvents with a simple HTTP interface
        displayName: Knative Eventing
        kind: KnativeEventing
        name: knativeeventings.operator.knative.dev
        statusDescriptors:
          - description: The version of Knative Eventing installed
            displayName: Version
            path: version
        version: v1beta1
      - description: An extension to Knative Eventing, merging HTTP accessibility with Apache Kafka's proven efficiency and reliability
        displayName: Knative Kafka
        kind: KnativeKafka
        name: knativekafkas.operator.serverless.openshift.io
        version: v1alpha1
  install:
    strategy: deployment
    spec:
      clusterPermissions:
        - serviceAccountName: knative-openshift
          rules:
            - apiGroups:
                - sources.knative.dev
              resources:
                - kafkasources
                - kafkasinks
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ""
              resources:
                - configmaps
                - events
                - namespaces
                - serviceaccounts
                - services
                - secrets
                - endpoints
                - pods
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - deployments
                - deployments/finalizers # For monitoring resources to set their ownerRef correctly
                - statefulsets
                - statefulsets/finalizers # For monitoring resources to set their ownerRef correctly
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - autoscaling
              resources:
                - horizontalpodautoscalers
              verbs:
                - create
                - delete
                - get
                - list
            - apiGroups:
                - batch
              resources:
                - jobs
              verbs:
                - create
                - delete
                - get
                - list
                - watch
                - update
            - apiGroups:
                - policy
              resources:
                - poddisruptionbudgets
              verbs:
                - create
                - delete
                - get
                - list
                - update
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterroles
                - roles
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
                # Escalate is necessary in order to create a role using cluster role aggregation,
                # and to allow the Operator to bootstrap itself into the necessary set of permissions
                # Bind is needed to bind roles and clusterRoles, with permissions
                # that the operator itself does not hold
                - escalate
                - bind
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterrolebindings
                - rolebindings
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - admissionregistration.k8s.io
              resources:
                - mutatingwebhookconfigurations
                - validatingwebhookconfigurations
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - networking.k8s.io
              resources:
                - networkpolicies
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
                - customresourcedefinitions/status
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - caching.internal.knative.dev
              resources:
                - images
              verbs:
                - create
                - delete
                - get
                - list
                - update
            # Downstream additions
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - console.openshift.io
              resources:
                - consolequickstarts
                - consoleclidownloads
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - config.openshift.io
              resources:
                - clusteroperators
                - clusteroperators/status
              verbs:
                - "get"
                - "watch"
                - "list"
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
                - routes/custom-host
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            # Leases are needed for leaderelection to work
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            # These are resources we own
            - apiGroups:
                - operator.knative.dev
              resources:
                - knativeservings
                - knativeservings/status
                - knativeservings/finalizers
                - knativeeventings
                - knativeeventings/status
                - knativeeventings/finalizers
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
                - patch
            - apiGroups:
                - operator.serverless.openshift.io
              resources:
                - knativekafkas
                - knativekafkas/status
                - knativekafkas/finalizers
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
                - patch
            # These resources we only read
            - apiGroups:
                - config.openshift.io
              resources:
                - ingresses
              verbs:
                - get
                - list
                - watch
            # Eventing TLS
            - apiGroups:
                - "cert-manager.io"
              resources:
                - certificates
                - issuers
                - clusterissuers
              verbs:
                - create
                - delete
                - update
                - list
                - get
                - watch
        - serviceAccountName: knative-operator
          rules:
            # These are needed to create the various different resources.
            # Upstream manifests
            - apiGroups:
                - ""
              resources:
                - configmaps
                - namespaces
                - secrets
                - serviceaccounts
                - services
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
                - patch
            - apiGroups:
                - apps
              resources:
                - deployments
                - deployments/finalizers # For monitoring resources to set their ownerRef correctly
                - statefulsets
                - statefulsets/finalizers # For monitoring resources to set their ownerRef correctly
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - autoscaling
              resources:
                - horizontalpodautoscalers
              verbs:
                - create
                - delete
                - get
                - list
                - update
            - apiGroups:
                - batch
              resources:
                - jobs
              verbs:
                - create
                - delete
                - get
                - list
                - watch
                - update
            - apiGroups:
                - policy
              resources:
                - poddisruptionbudgets
              verbs:
                - create
                - delete
                - get
                - list
                - update
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterroles
                - roles
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
                # Escalate is necessary in order to create a role using cluster role aggregation,
                # and to allow the Operator to bootstrap itself into the necessary set of permissions
                # Bind is needed to bind roles and clusterRoles, with permissions
                # that the operator itself does not hold
                - escalate
                - bind
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterrolebindings
                - rolebindings
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - admissionregistration.k8s.io
              resources:
                - mutatingwebhookconfigurations
                - validatingwebhookconfigurations
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - networking.k8s.io
              resources:
                - networkpolicies
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions
                - customresourcedefinitions/status
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - caching.internal.knative.dev
              resources:
                - images
              verbs:
                - create
                - delete
                - get
                - list
                - update
            # Downstream additions
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - console.openshift.io
              resources:
                - consolequickstarts
                - consoleclidownloads
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            - apiGroups:
                - config.openshift.io
              resources:
                - clusteroperators
                - clusteroperators/status
              verbs:
                - get
                - watch
                - list
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
                - routes/custom-host
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            # Leases are needed for leaderelection to work
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
            # These are resources we own
            - apiGroups:
                - operator.knative.dev
              resources:
                - knativeservings
                - knativeservings/status
                - knativeservings/finalizers
                - knativeeventings
                - knativeeventings/status
                - knativeeventings/finalizers
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
                - patch
            - apiGroups:
                - operator.serverless.openshift.io
              resources:
                - knativekafkas
                - knativekafkas/status
                - knativekafkas/finalizers
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
                - patch
            # These resources we only read
            - apiGroups:
                - config.openshift.io
              resources:
                - ingresses
              verbs:
                - get
                - list
                - watch
            # Eventing TLS
            - apiGroups:
                - "cert-manager.io"
              resources:
                - certificates
                - issuers
                - clusterissuers
              verbs:
                - create
                - delete
                - update
                - list
                - get
                - watch
            - apiGroups:
                - networking.internal.knative.dev
              resources:
                - certificates
              verbs:
                - create
                - delete
                - update
                - get
                - list
                - watch
        - serviceAccountName: knative-openshift-ingress
          rules:
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - delete
                - get
                - list
            - apiGroups:
                - ""
              resources:
                - configmaps
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - networking.internal.knative.dev
              resources:
                - ingresses
                - ingresses/finalizers
              verbs:
                - get
                - list
                - watch
                - patch # for the finalizer
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
                - routes/custom-host
              verbs:
                - create
                - delete
                - get
                - list
                - update
                - watch
      deployments:
        # Our version of the upstream operator. This is responsible for installing Knative
        # itself.
        - name: knative-operator-webhook
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: knative-operator
                serverless.openshift.io/is: webhook
            template:
              metadata:
                labels:
                  name: knative-operator
                  serverless.openshift.io/is: webhook
                  sidecar.istio.io/inject: "false"
              spec:
                serviceAccountName: knative-operator
                containers:
                  - name: knative-operator
                    image: registry.redhat.io/openshift-serverless-1/serverless-openshift-kn-rhel9-operator@sha256:6f365cabd4520efd71fcb4bcb8b7eb1bea55e09a1943773fe41c58d9de0213ad
                    readinessProbe:
                      periodSeconds: 1
                      httpGet:
                        scheme: HTTPS
                        port: 8443
                        httpHeaders:
                          - name: k-kubelet-probe
                            value: "webhook"
                      livenessProbe:
                        periodSeconds: 1
                        httpGet:
                          scheme: HTTPS
                          port: 8443
                          httpHeaders:
                            - name: k-kubelet-probe
                              value: "webhook"
                        failureThreshold: 6
                        initialDelaySeconds: 20
                    imagePullPolicy: Always
                    ports:
                      - containerPort: 9090
                        name: metrics
                      - containerPort: 8443
                        name: https-webhook
                    env:
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: knative-operator
                      - name: SYSTEM_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: METRICS_DOMAIN
                        value: knative.dev/serving-operator
                      - name: REQUIRED_SERVING_NAMESPACE
                        value: "knative-serving"
                      - name: REQUIRED_SERVING_INGRESS_NAMESPACE
                        value: "knative-serving-ingress"
                      - name: REQUIRED_EVENTING_NAMESPACE
                        value: "knative-eventing"
                      - name: SERVICE_MONITOR_RBAC_MANIFEST_PATH
                        value: "/var/run/ko/monitoring/rbac-proxy.yaml"
                      - name: WEBHOOK_NAME
                        value: "knative-operator-service"
                      - name: USE_OLM_TLS
                        value: "true"
                      - name: KUBERNETES_MIN_VERSION
                        value: "v1.0.0"
                      - name: "IMAGE_queue-proxy"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-queue-rhel9@sha256:3f662a5c3a88c2fa33c6e5f2174c1c7f3babe0bba7c460e49a0b3b770b6b80a3"
                      - name: "IMAGE_activator"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-activator-rhel9@sha256:ad034cb6d9cf06c17dfc8b64d0a3e449acbb2819785ee4cdd27d8912b5032b69"
                      - name: "IMAGE_autoscaler"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-autoscaler-rhel9@sha256:403595e00d117ae686bb107c85d3678f8859c977138ae071594780d73235f969"
                      - name: "IMAGE_autoscaler-hpa"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-autoscaler-hpa-rhel9@sha256:f6a72a6c6048829819fac7ce360b06ff3d6fe7023960d56eb3b4ac4550d5d015"
                      - name: "IMAGE_controller__controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-controller-rhel9@sha256:f084f4b9bd308b729c67f0f97baa7d1a4242adf409d11b766c640b664a5bfe1d"
                      - name: "IMAGE_webhook__webhook"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-webhook-rhel9@sha256:76780af22c2a1bd6af7a24fadd2c15f4fcc1566eb40558db3ccdd1667b572523"
                      - name: "IMAGE_storage-version-migration-serving-__migrate"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-storage-version-migration-rhel9@sha256:8b08802b234cfd133894caefbd5a2de473fc1ff7ecc50e7c4ae1081ec25150f8"
                      - name: "IMAGE_kourier-gateway"
                        value: "registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:1c19cf86fd05940ef3d0d6e79e6f371db993153f70baedb9107bbe73f236dc24"
                      - name: "IMAGE_net-kourier-controller__controller"
                        value: "registry.redhat.io/openshift-serverless-1/net-kourier-kourier-rhel9@sha256:846e0e4e18a53efaaeaaa48c5c610443232aa9a0fb6d14ec16a628d292651134"
                      - name: "IMAGE_net-istio-controller__controller"
                        value: "registry.redhat.io/openshift-serverless-1/net-istio-controller-rhel9@sha256:6837dd2fca8684c7afd0fd81f3d879911c6744f44e502178a5a7c44a2ce0ac0b"
                      - name: "IMAGE_net-istio-webhook__webhook"
                        value: "registry.redhat.io/openshift-serverless-1/net-istio-webhook-rhel9@sha256:644bbf85a01ffe935d753ceea1847e84b21d614b2159e4cdf1af05d39620fb56"
                      - name: "IMAGE_eventing-controller__eventing-controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-controller-rhel9@sha256:cb22545a768c5343eea23a63ffe6463494127833c2d227bdcec44206b706034b"
                      - name: "IMAGE_eventing-istio-controller__eventing-istio-controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-istio-controller-rhel9@sha256:5706d0acbe002629b6cc4ab070d252ac6df938c5a29317f5ba146d50b1ff109a"
                      - name: "IMAGE_eventing-webhook__eventing-webhook"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-webhook-rhel9@sha256:d7b3a03ac3c5faf8f515ce8b115f5475e00b2df5b5509f8bf8ca0cea013030bb"
                      - name: "IMAGE_storage-version-migration-eventing-__migrate"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-migrate-rhel9@sha256:0228001b4749c1e2ada84c4e9ad7d9e8b4e466227ebd7051e7f4b1baaa8ff518"
                      - name: "IMAGE_mt-broker-controller__mt-broker-controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-mtchannel-broker-rhel9@sha256:5efbfbcd115005cbae1aa3db847748c3075f5446e9960aff92f9adae3a6ce3c0"
                      - name: "IMAGE_mt-broker-filter__filter"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-filter-rhel9@sha256:f69a9782f45d81da0b6fcac7300925f3fa364333b1224cc2afebd5e75268d412"
                      - name: "IMAGE_mt-broker-ingress__ingress"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-ingress-rhel9@sha256:a0b8e77f604272d7d59c34551a614ad5c63b94a0c0cc5a24ec7d547bb6fb9700"
                      - name: "IMAGE_imc-controller__controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-channel-controller-rhel9@sha256:b1dd98d82f212534be88b2885f4623fa4863a7febc4d9fa20f1c7b034f500fbc"
                      - name: "IMAGE_imc-dispatcher__dispatcher"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-channel-dispatcher-rhel9@sha256:65397b4877d4612162c9485ecb23ff6461e1638bf656b50db02cf91aa96c6f09"
                      - name: "IMAGE_pingsource-mt-adapter__dispatcher"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-mtping-rhel9@sha256:c869851f6b0abc9e7f2458c104de037b76a03ab0650ff36a3822c47d7a199179"
                      - name: "IMAGE_job-sink__job-sink"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-jobsink-rhel9@sha256:0e090f02487a3746090a21796a513b30bf14ea8bb79d5e474a02e321e7ec930a"
                      - name: "IMAGE_APISERVER_RA_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-apiserver-receive-adapter-rhel9@sha256:9fdad40fb5f98273d673f8c713e226c816e33cab5ff79751ba99e653a91e1aee"
                      - name: "IMAGE_DISPATCHER_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-channel-dispatcher-rhel9@sha256:65397b4877d4612162c9485ecb23ff6461e1638bf656b50db02cf91aa96c6f09"
                      - name: "IMAGE_EVENT_TRANSFORM_JSONATA_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-transform-jsonata-rhel9@sha256:84f644fbe19f757ed132023519925541f97ff66aa001fd6e9eaa9c3382dfc305"
                      - name: "IMAGE_INTEGRATION_SOURCE_TIMER_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-timer-source-rhel9@sha256:f69c1081456625e144f2216b4dfd088027dbb4aff796ce01d1d3479ab9e776af"
                      - name: "IMAGE_INTEGRATION_SOURCE_AWS_S3_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-s3-source-rhel9@sha256:f57373935d4c9593c581b886780cbffc390f6dea5b64123738cd44cb6eb2fb55"
                      - name: "IMAGE_INTEGRATION_SOURCE_AWS_SQS_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-sqs-source-rhel9@sha256:40110d0541f573edd34e90bdad03d9bbaf646c7b7bc626e2972e13bc0f2875cb"
                      - name: "IMAGE_INTEGRATION_SOURCE_AWS_DDB_STREAMS_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-ddb-streams-source-rhel9@sha256:4d513f8adaf93653f2c70f32843b5f83034ae30dfb2bf0c64d977536bfd38585"
                      - name: "IMAGE_INTEGRATION_SINK_LOG_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-log-sink-rhel9@sha256:b33a523f71181580078febeef835bbf4ac29f38ce869d9b504f715d5164bcba7"
                      - name: "IMAGE_INTEGRATION_SINK_AWS_S3_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-s3-sink-rhel9@sha256:cbbb950f3405fe415467c11a2f7bd2fb63afa7eba7e90fd548060deec5a0481f"
                      - name: "IMAGE_INTEGRATION_SINK_AWS_SQS_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-sqs-sink-rhel9@sha256:8142e26f2681f2de46371961cc76a637513e7c8e32b7aacab855f577436a3080"
                      - name: "IMAGE_INTEGRATION_SINK_AWS_SNS_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-sns-sink-rhel9@sha256:23f1c595d300f1763491774bd53cf51bc29a899071f8a8118f1e83db45d9621f"
                      - name: "IMAGE_eventmesh-backend__controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-backstage-plugins-eventmesh-rhel9@sha256:714a313545822c13726255d8766ab5ba5c58146f12f202c781c793fc751b9b23"
                      - name: "IMAGE_KUBE_RBAC_PROXY"
                        value: "registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:35ea04c339f401902d710bf4ccfe20aa89fc5a4fc7854ed73c8d869450b323ac"
                      - name: "IMAGE_KN_PLUGIN_EVENT_SENDER"
                        value: "registry.redhat.io/openshift-serverless-1/kn-plugin-event-sender-rhel9@sha256:2d8cfab33f1c46b2d4510ea4b56a09e12b8bcf07c0eb055e84ebc077ec730145"
                      - name: "IMAGE_KN_CLIENT"
                        value: "registry.redhat.io/openshift-serverless-1/kn-client-kn-rhel9@sha256:58d7a2e94e12f71cafa397650ad892ff5f35470c404ae36f68c0627b87492e46"
                      - name: "IMAGE_KN_PLUGIN_FUNC_UTIL"
                        value: "registry.redhat.io/openshift-serverless-1/kn-plugin-func-func-util-rhel9@sha256:919aed0783ee6e333f619a7fee1c8ea67b6184c19d0ba1ff75f56eec6cb9042b"
                      - name: "IMAGE_KN_PLUGIN_FUNC_TEKTON_BUILDAH"
                        value: "registry.redhat.io/rhel8/buildah@sha256:3d505d9c0f5d4cd5a4ec03b8d038656c6cdbdf5191e00ce6388f7e0e4d2f1b74"
                      - name: "IMAGE_KN_PLUGIN_FUNC_NODEJS_20_MINIMAL"
                        value: "registry.access.redhat.com/ubi8/nodejs-20-minimal@sha256:a2a7e399aaf09a48c28f40820da16709b62aee6f2bc703116b9345fab5830861"
                      - name: "IMAGE_KN_PLUGIN_FUNC_OPENJDK_21"
                        value: "registry.access.redhat.com/ubi8/openjdk-21@sha256:441897a1f691c7d4b3a67bb3e0fea83e18352214264cb383fd057bbbd5ed863c"
                      - name: "IMAGE_KN_PLUGIN_FUNC_PYTHON_39"
                        value: "registry.access.redhat.com/ubi8/python-39@sha256:27e795fd6b1b77de70d1dc73a65e4c790650748a9cfda138fdbd194b3d6eea3d"
                      - name: "CURRENT_VERSION"
                        value: "1.37.0"
                      - name: "KNATIVE_SERVING_VERSION"
                        value: "1.17"
                      - name: "KNATIVE_EVENTING_VERSION"
                        value: "1.17"
                      - name: "KNATIVE_EVENTING_KAFKA_BROKER_VERSION"
                        value: "1.17"
                    securityContext:
                      allowPrivilegeEscalation: false
                      readOnlyRootFilesystem: true
                      runAsNonRoot: true
                      capabilities:
                        drop:
                          - ALL
        # Openshift specific extensions in the "old" operator format. Ships KnativeKafka and
        # other Openshift specifica that have not yet been moved to the operator above.
        - name: knative-openshift
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: knative-openshift
            template:
              metadata:
                labels:
                  name: knative-openshift
              spec:
                serviceAccountName: knative-openshift
                initContainers:
                  - name: cli-artifacts
                    image: registry.redhat.io/openshift-serverless-1/kn-client-cli-artifacts-rhel9@sha256:3a2daeaba91631cb107cc4de9e01f88e18783fd21329dbf6c6fd0d8616fba4ff
                    imagePullPolicy: Always
                    command: ["sh", "-c", "rm -rf /cli-artifacts/* && cp /usr/share/kn/**/* /cli-artifacts && chmod 444 /cli-artifacts/*"]
                    volumeMounts:
                      - mountPath: /cli-artifacts
                        name: cli-artifacts
                    securityContext:
                      allowPrivilegeEscalation: false
                      runAsNonRoot: true
                      capabilities:
                        drop:
                          - ALL
                containers:
                  - name: knative-openshift
                    image: registry.redhat.io/openshift-serverless-1/serverless-kn-operator-rhel9@sha256:ffd77d4e90e1e16cdd0db7ad501424f38b5da2d4149d4fdaa3032974b15e164e
                    imagePullPolicy: Always
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8687
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8687
                    ports:
                      - name: http-cli
                        containerPort: 8080
                    volumeMounts:
                      - mountPath: /cli-artifacts
                        name: cli-artifacts
                    env:
                      - name: WATCH_NAMESPACE
                        value: ""
                      - name: NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: DEPLOYMENT_NAME
                        value: "knative-openshift"
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: "knative-openshift"
                      - name: REQUIRED_SERVING_NAMESPACE
                        value: "knative-serving"
                      - name: REQUIRED_SERVING_INGRESS_NAMESPACE
                        value: "knative-serving-ingress"
                      - name: REQUIRED_EVENTING_NAMESPACE
                        value: "knative-eventing"
                      - name: REQUIRED_KAFKA_NAMESPACE
                        value: "knative-eventing"
                      - name: KAFKACHANNEL_MANIFEST_PATH
                        value: deploy/resources/knativekafka/channel
                      - name: KAFKASOURCE_MANIFEST_PATH
                        value: deploy/resources/knativekafka/source
                      - name: KAFKACONTROLLER_MANIFEST_PATH
                        value: deploy/resources/knativekafka/controller
                      - name: KAFKABROKER_MANIFEST_PATH
                        value: deploy/resources/knativekafka/broker
                      - name: KAFKASINK_MANIFEST_PATH
                        value: deploy/resources/knativekafka/sink
                      - name: QUICKSTART_MANIFEST_PATH
                        value: "deploy/resources/quickstart/serverless-application-quickstart.yaml"
                      - name: DASHBOARDS_ROOT_MANIFEST_PATH
                        value: "deploy/resources/dashboards"
                      - name: SOURCES_USE_CLUSTER_MONITORING
                        value: "true"
                      - name: SOURCES_GENERATE_SERVICE_MONITORS
                        value: "true"
                      - name: ENABLE_PPROF
                        value: "false"
                      - name: KUBERNETES_MIN_VERSION
                        value: "v1.0.0"
                      - name: "IMAGE_queue-proxy"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-queue-rhel9@sha256:3f662a5c3a88c2fa33c6e5f2174c1c7f3babe0bba7c460e49a0b3b770b6b80a3"
                      - name: "IMAGE_activator"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-activator-rhel9@sha256:ad034cb6d9cf06c17dfc8b64d0a3e449acbb2819785ee4cdd27d8912b5032b69"
                      - name: "IMAGE_autoscaler"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-autoscaler-rhel9@sha256:403595e00d117ae686bb107c85d3678f8859c977138ae071594780d73235f969"
                      - name: "IMAGE_autoscaler-hpa"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-autoscaler-hpa-rhel9@sha256:f6a72a6c6048829819fac7ce360b06ff3d6fe7023960d56eb3b4ac4550d5d015"
                      - name: "IMAGE_controller__controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-controller-rhel9@sha256:f084f4b9bd308b729c67f0f97baa7d1a4242adf409d11b766c640b664a5bfe1d"
                      - name: "IMAGE_webhook__webhook"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-webhook-rhel9@sha256:76780af22c2a1bd6af7a24fadd2c15f4fcc1566eb40558db3ccdd1667b572523"
                      - name: "IMAGE_storage-version-migration-serving-__migrate"
                        value: "registry.redhat.io/openshift-serverless-1/kn-serving-storage-version-migration-rhel9@sha256:8b08802b234cfd133894caefbd5a2de473fc1ff7ecc50e7c4ae1081ec25150f8"
                      - name: "IMAGE_kourier-gateway"
                        value: "registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:1c19cf86fd05940ef3d0d6e79e6f371db993153f70baedb9107bbe73f236dc24"
                      - name: "IMAGE_net-kourier-controller__controller"
                        value: "registry.redhat.io/openshift-serverless-1/net-kourier-kourier-rhel9@sha256:846e0e4e18a53efaaeaaa48c5c610443232aa9a0fb6d14ec16a628d292651134"
                      - name: "IMAGE_net-istio-controller__controller"
                        value: "registry.redhat.io/openshift-serverless-1/net-istio-controller-rhel9@sha256:6837dd2fca8684c7afd0fd81f3d879911c6744f44e502178a5a7c44a2ce0ac0b"
                      - name: "IMAGE_net-istio-webhook__webhook"
                        value: "registry.redhat.io/openshift-serverless-1/net-istio-webhook-rhel9@sha256:644bbf85a01ffe935d753ceea1847e84b21d614b2159e4cdf1af05d39620fb56"
                      - name: "IMAGE_eventing-controller__eventing-controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-controller-rhel9@sha256:cb22545a768c5343eea23a63ffe6463494127833c2d227bdcec44206b706034b"
                      - name: "IMAGE_eventing-istio-controller__eventing-istio-controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-istio-controller-rhel9@sha256:5706d0acbe002629b6cc4ab070d252ac6df938c5a29317f5ba146d50b1ff109a"
                      - name: "IMAGE_eventing-webhook__eventing-webhook"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-webhook-rhel9@sha256:d7b3a03ac3c5faf8f515ce8b115f5475e00b2df5b5509f8bf8ca0cea013030bb"
                      - name: "IMAGE_storage-version-migration-eventing-__migrate"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-migrate-rhel9@sha256:0228001b4749c1e2ada84c4e9ad7d9e8b4e466227ebd7051e7f4b1baaa8ff518"
                      - name: "IMAGE_mt-broker-controller__mt-broker-controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-mtchannel-broker-rhel9@sha256:5efbfbcd115005cbae1aa3db847748c3075f5446e9960aff92f9adae3a6ce3c0"
                      - name: "IMAGE_mt-broker-filter__filter"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-filter-rhel9@sha256:f69a9782f45d81da0b6fcac7300925f3fa364333b1224cc2afebd5e75268d412"
                      - name: "IMAGE_mt-broker-ingress__ingress"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-ingress-rhel9@sha256:a0b8e77f604272d7d59c34551a614ad5c63b94a0c0cc5a24ec7d547bb6fb9700"
                      - name: "IMAGE_imc-controller__controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-channel-controller-rhel9@sha256:b1dd98d82f212534be88b2885f4623fa4863a7febc4d9fa20f1c7b034f500fbc"
                      - name: "IMAGE_imc-dispatcher__dispatcher"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-channel-dispatcher-rhel9@sha256:65397b4877d4612162c9485ecb23ff6461e1638bf656b50db02cf91aa96c6f09"
                      - name: "IMAGE_pingsource-mt-adapter__dispatcher"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-mtping-rhel9@sha256:c869851f6b0abc9e7f2458c104de037b76a03ab0650ff36a3822c47d7a199179"
                      - name: "IMAGE_job-sink__job-sink"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-jobsink-rhel9@sha256:0e090f02487a3746090a21796a513b30bf14ea8bb79d5e474a02e321e7ec930a"
                      - name: "IMAGE_APISERVER_RA_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-apiserver-receive-adapter-rhel9@sha256:9fdad40fb5f98273d673f8c713e226c816e33cab5ff79751ba99e653a91e1aee"
                      - name: "IMAGE_DISPATCHER_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-channel-dispatcher-rhel9@sha256:65397b4877d4612162c9485ecb23ff6461e1638bf656b50db02cf91aa96c6f09"
                      - name: "IMAGE_EVENT_TRANSFORM_JSONATA_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-transform-jsonata-rhel9@sha256:84f644fbe19f757ed132023519925541f97ff66aa001fd6e9eaa9c3382dfc305"
                      - name: "IMAGE_INTEGRATION_SOURCE_TIMER_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-timer-source-rhel9@sha256:f69c1081456625e144f2216b4dfd088027dbb4aff796ce01d1d3479ab9e776af"
                      - name: "IMAGE_INTEGRATION_SOURCE_AWS_S3_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-s3-source-rhel9@sha256:f57373935d4c9593c581b886780cbffc390f6dea5b64123738cd44cb6eb2fb55"
                      - name: "IMAGE_INTEGRATION_SOURCE_AWS_SQS_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-sqs-source-rhel9@sha256:40110d0541f573edd34e90bdad03d9bbaf646c7b7bc626e2972e13bc0f2875cb"
                      - name: "IMAGE_INTEGRATION_SOURCE_AWS_DDB_STREAMS_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-ddb-streams-source-rhel9@sha256:4d513f8adaf93653f2c70f32843b5f83034ae30dfb2bf0c64d977536bfd38585"
                      - name: "IMAGE_INTEGRATION_SINK_LOG_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-log-sink-rhel9@sha256:b33a523f71181580078febeef835bbf4ac29f38ce869d9b504f715d5164bcba7"
                      - name: "IMAGE_INTEGRATION_SINK_AWS_S3_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-s3-sink-rhel9@sha256:cbbb950f3405fe415467c11a2f7bd2fb63afa7eba7e90fd548060deec5a0481f"
                      - name: "IMAGE_INTEGRATION_SINK_AWS_SQS_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-sqs-sink-rhel9@sha256:8142e26f2681f2de46371961cc76a637513e7c8e32b7aacab855f577436a3080"
                      - name: "IMAGE_INTEGRATION_SINK_AWS_SNS_IMAGE"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-sns-sink-rhel9@sha256:23f1c595d300f1763491774bd53cf51bc29a899071f8a8118f1e83db45d9621f"
                      - name: "IMAGE_eventmesh-backend__controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-backstage-plugins-eventmesh-rhel9@sha256:714a313545822c13726255d8766ab5ba5c58146f12f202c781c793fc751b9b23"
                      - name: "IMAGE_KUBE_RBAC_PROXY"
                        value: "registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:35ea04c339f401902d710bf4ccfe20aa89fc5a4fc7854ed73c8d869450b323ac"
                      - name: "IMAGE_KN_PLUGIN_EVENT_SENDER"
                        value: "registry.redhat.io/openshift-serverless-1/kn-plugin-event-sender-rhel9@sha256:2d8cfab33f1c46b2d4510ea4b56a09e12b8bcf07c0eb055e84ebc077ec730145"
                      - name: "IMAGE_KN_CLIENT"
                        value: "registry.redhat.io/openshift-serverless-1/kn-client-kn-rhel9@sha256:58d7a2e94e12f71cafa397650ad892ff5f35470c404ae36f68c0627b87492e46"
                      - name: "IMAGE_KN_PLUGIN_FUNC_UTIL"
                        value: "registry.redhat.io/openshift-serverless-1/kn-plugin-func-func-util-rhel9@sha256:919aed0783ee6e333f619a7fee1c8ea67b6184c19d0ba1ff75f56eec6cb9042b"
                      - name: "IMAGE_KN_PLUGIN_FUNC_TEKTON_BUILDAH"
                        value: "registry.redhat.io/rhel8/buildah@sha256:3d505d9c0f5d4cd5a4ec03b8d038656c6cdbdf5191e00ce6388f7e0e4d2f1b74"
                      - name: "IMAGE_KN_PLUGIN_FUNC_NODEJS_20_MINIMAL"
                        value: "registry.access.redhat.com/ubi8/nodejs-20-minimal@sha256:a2a7e399aaf09a48c28f40820da16709b62aee6f2bc703116b9345fab5830861"
                      - name: "IMAGE_KN_PLUGIN_FUNC_OPENJDK_21"
                        value: "registry.access.redhat.com/ubi8/openjdk-21@sha256:441897a1f691c7d4b3a67bb3e0fea83e18352214264cb383fd057bbbd5ed863c"
                      - name: "IMAGE_KN_PLUGIN_FUNC_PYTHON_39"
                        value: "registry.access.redhat.com/ubi8/python-39@sha256:27e795fd6b1b77de70d1dc73a65e4c790650748a9cfda138fdbd194b3d6eea3d"
                      - name: "KAFKA_IMAGE_kafka-broker-receiver__kafka-broker-receiver"
                        value: "registry.redhat.io/openshift-serverless-1/kn-ekb-receiver-rhel9@sha256:3154b2079a3ed21edfc804ff4bed1735a2269e9c841d91e009798fd0cb55c5a3"
                      - name: "KAFKA_IMAGE_kafka-broker-dispatcher__kafka-broker-dispatcher"
                        value: "registry.redhat.io/openshift-serverless-1/kn-ekb-dispatcher-rhel9@sha256:1583268b541adc2321d254dfcacafd380f8051f6e0417ab7c18a928f835af136"
                      - name: "KAFKA_IMAGE_kafka-channel-receiver__kafka-channel-receiver"
                        value: "registry.redhat.io/openshift-serverless-1/kn-ekb-receiver-rhel9@sha256:3154b2079a3ed21edfc804ff4bed1735a2269e9c841d91e009798fd0cb55c5a3"
                      - name: "KAFKA_IMAGE_kafka-channel-dispatcher__kafka-channel-dispatcher"
                        value: "registry.redhat.io/openshift-serverless-1/kn-ekb-dispatcher-rhel9@sha256:1583268b541adc2321d254dfcacafd380f8051f6e0417ab7c18a928f835af136"
                      - name: "KAFKA_IMAGE_kafka-controller__controller"
                        value: "registry.redhat.io/openshift-serverless-1/kn-ekb-kafka-controller-rhel9@sha256:61d685d51f5a4715c202ec09b85d2771f139d11c2629156be31023530fbdefd8"
                      - name: "KAFKA_IMAGE_kafka-sink-receiver__kafka-sink-receiver"
                        value: "registry.redhat.io/openshift-serverless-1/kn-ekb-receiver-rhel9@sha256:3154b2079a3ed21edfc804ff4bed1735a2269e9c841d91e009798fd0cb55c5a3"
                      - name: "KAFKA_IMAGE_kafka-source-dispatcher__kafka-source-dispatcher"
                        value: "registry.redhat.io/openshift-serverless-1/kn-ekb-dispatcher-rhel9@sha256:1583268b541adc2321d254dfcacafd380f8051f6e0417ab7c18a928f835af136"
                      - name: "KAFKA_IMAGE_kafka-webhook-eventing__kafka-webhook-eventing"
                        value: "registry.redhat.io/openshift-serverless-1/kn-ekb-webhook-kafka-rhel9@sha256:2872b50a2263ba7ee84096c8e3b2359f9e1792573af4351edd82d9d5ff3c0bb6"
                      - name: "KAFKA_IMAGE_kafka-controller-post-install__post-install"
                        value: "registry.redhat.io/openshift-serverless-1/kn-ekb-post-install-rhel9@sha256:11f72387d1328d3de0b0f29dce939f10679103759145f8d5dc22cf80448f8698"
                      - name: "KAFKA_IMAGE_knative-kafka-storage-version-migrator__migrate"
                        value: "registry.redhat.io/openshift-serverless-1/kn-eventing-migrate-rhel9@sha256:0228001b4749c1e2ada84c4e9ad7d9e8b4e466227ebd7051e7f4b1baaa8ff518"
                      - name: "CURRENT_VERSION"
                        value: "1.37.0"
                      - name: "KNATIVE_SERVING_VERSION"
                        value: "1.17"
                      - name: "KNATIVE_EVENTING_VERSION"
                        value: "1.17"
                      - name: "KNATIVE_EVENTING_KAFKA_BROKER_VERSION"
                        value: "1.17"
                    securityContext:
                      allowPrivilegeEscalation: false
                      readOnlyRootFilesystem: true
                      runAsNonRoot: true
                      capabilities:
                        drop:
                          - ALL
                volumes:
                  - name: cli-artifacts
                    emptyDir: {}
        # Openshift Ingress adapter for Knative's Ingress implementation.
        - name: knative-openshift-ingress
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: knative-openshift-ingress
            template:
              metadata:
                labels:
                  name: knative-openshift-ingress
              spec:
                serviceAccountName: knative-openshift-ingress
                containers:
                  - name: knative-openshift-ingress
                    image: registry.redhat.io/openshift-serverless-1/serverless-ingress-rhel9@sha256:e1e72ad71f05476cc1d4847a4ab0da932d86cb3e57a09f046cb3536a07316a50
                    imagePullPolicy: Always
                    ports:
                      - containerPort: 9090
                        name: metrics
                    env:
                      - name: METRICS_DOMAIN
                        value: knative.dev/serving
                      - name: WATCH_NAMESPACE
                        value: "" # watch all namespaces for ClusterIngress
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: "knative-openshift-ingress"
                      - name: SYSTEM_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: KUBERNETES_MIN_VERSION
                        value: "v1.0.0"
                      - name: ROUTE_HAPROXY_TIMEOUT
                        value: "600"
                    securityContext:
                      allowPrivilegeEscalation: false
                      readOnlyRootFilesystem: true
                      runAsNonRoot: true
                      capabilities:
                        drop:
                          - ALL
  webhookdefinitions:
    - generateName: validating.knativeeventings.operator.serverless.openshift.io
      type: ValidatingAdmissionWebhook
      deploymentName: knative-openshift
      admissionReviewVersions:
        - v1beta1
      containerPort: 9876
      failurePolicy: Ignore
      rules:
        - apiGroups:
            - operator.knative.dev
          apiVersions:
            - v1beta1
          operations:
            - CREATE
            - UPDATE
          resources:
            - knativeeventings
      sideEffects: None
      webhookPath: /validate-knativeeventings
    - generateName: validating.knativeservings.operator.serverless.openshift.io
      type: ValidatingAdmissionWebhook
      deploymentName: knative-openshift
      admissionReviewVersions:
        - v1beta1
      containerPort: 9876
      failurePolicy: Ignore
      rules:
        - apiGroups:
            - operator.knative.dev
          apiVersions:
            - v1beta1
          operations:
            - CREATE
            - UPDATE
          resources:
            - knativeservings
      sideEffects: None
      webhookPath: /validate-knativeservings
    - generateName: validating.knativekafkas.operator.serverless.openshift.io
      type: ValidatingAdmissionWebhook
      deploymentName: knative-openshift
      admissionReviewVersions:
        - v1beta1
      containerPort: 9876
      failurePolicy: Ignore
      rules:
        - apiGroups:
            - operator.serverless.openshift.io
          apiVersions:
            - v1alpha1
          operations:
            - CREATE
            - UPDATE
          resources:
            - knativekafkas
      sideEffects: None
      webhookPath: /validate-knativekafkas
    - generateName: mutating.knativeeventings.operator.serverless.openshift.io
      type: MutatingAdmissionWebhook
      deploymentName: knative-openshift
      admissionReviewVersions:
        - v1beta1
      containerPort: 9876
      failurePolicy: Ignore
      rules:
        - apiGroups:
            - operator.knative.dev
          apiVersions:
            - v1beta1
          operations:
            - CREATE
            - UPDATE
          resources:
            - knativeeventings
      sideEffects: None
      webhookPath: /mutate-knativeeventings
    - generateName: mutating.knativeservings.operator.serverless.openshift.io
      type: MutatingAdmissionWebhook
      deploymentName: knative-openshift
      admissionReviewVersions:
        - v1beta1
      containerPort: 9876
      failurePolicy: Ignore
      rules:
        - apiGroups:
            - operator.knative.dev
          apiVersions:
            - v1beta1
          operations:
            - CREATE
            - UPDATE
          resources:
            - knativeservings
      sideEffects: None
      webhookPath: /mutate-knativeservings
    - generateName: conversion.knativeservings.operator.knative.dev
      type: ConversionWebhook
      admissionReviewVersions:
        - v1beta1
      containerPort: 8443
      targetPort: 8443
      deploymentName: knative-operator-webhook
      sideEffects: None
      webhookPath: /resource-conversion
      conversionCRDs:
        - knativeservings.operator.knative.dev
    - generateName: conversion.knativeeventings.operator.knative.dev
      type: ConversionWebhook
      admissionReviewVersions:
        - v1beta1
      containerPort: 8443
      targetPort: 8443
      deploymentName: knative-operator-webhook
      sideEffects: None
      webhookPath: /resource-conversion
      conversionCRDs:
        - knativeeventings.operator.knative.dev
  relatedImages:
    - name: "knative-operator"
      image: "registry.redhat.io/openshift-serverless-1/serverless-openshift-kn-rhel9-operator@sha256:6f365cabd4520efd71fcb4bcb8b7eb1bea55e09a1943773fe41c58d9de0213ad"
    - name: "knative-openshift"
      image: "registry.redhat.io/openshift-serverless-1/serverless-kn-operator-rhel9@sha256:ffd77d4e90e1e16cdd0db7ad501424f38b5da2d4149d4fdaa3032974b15e164e"
    - name: "knative-openshift-ingress"
      image: "registry.redhat.io/openshift-serverless-1/serverless-ingress-rhel9@sha256:e1e72ad71f05476cc1d4847a4ab0da932d86cb3e57a09f046cb3536a07316a50"
    - name: "IMAGE_queue-proxy"
      image: "registry.redhat.io/openshift-serverless-1/kn-serving-queue-rhel9@sha256:3f662a5c3a88c2fa33c6e5f2174c1c7f3babe0bba7c460e49a0b3b770b6b80a3"
    - name: "IMAGE_activator"
      image: "registry.redhat.io/openshift-serverless-1/kn-serving-activator-rhel9@sha256:ad034cb6d9cf06c17dfc8b64d0a3e449acbb2819785ee4cdd27d8912b5032b69"
    - name: "IMAGE_autoscaler"
      image: "registry.redhat.io/openshift-serverless-1/kn-serving-autoscaler-rhel9@sha256:403595e00d117ae686bb107c85d3678f8859c977138ae071594780d73235f969"
    - name: "IMAGE_autoscaler-hpa"
      image: "registry.redhat.io/openshift-serverless-1/kn-serving-autoscaler-hpa-rhel9@sha256:f6a72a6c6048829819fac7ce360b06ff3d6fe7023960d56eb3b4ac4550d5d015"
    - name: "IMAGE_controller__controller"
      image: "registry.redhat.io/openshift-serverless-1/kn-serving-controller-rhel9@sha256:f084f4b9bd308b729c67f0f97baa7d1a4242adf409d11b766c640b664a5bfe1d"
    - name: "IMAGE_webhook__webhook"
      image: "registry.redhat.io/openshift-serverless-1/kn-serving-webhook-rhel9@sha256:76780af22c2a1bd6af7a24fadd2c15f4fcc1566eb40558db3ccdd1667b572523"
    - name: "IMAGE_storage-version-migration-serving-__migrate"
      image: "registry.redhat.io/openshift-serverless-1/kn-serving-storage-version-migration-rhel9@sha256:8b08802b234cfd133894caefbd5a2de473fc1ff7ecc50e7c4ae1081ec25150f8"
    - name: "IMAGE_kourier-gateway"
      image: "registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:1c19cf86fd05940ef3d0d6e79e6f371db993153f70baedb9107bbe73f236dc24"
    - name: "IMAGE_net-kourier-controller__controller"
      image: "registry.redhat.io/openshift-serverless-1/net-kourier-kourier-rhel9@sha256:846e0e4e18a53efaaeaaa48c5c610443232aa9a0fb6d14ec16a628d292651134"
    - name: "IMAGE_net-istio-controller__controller"
      image: "registry.redhat.io/openshift-serverless-1/net-istio-controller-rhel9@sha256:6837dd2fca8684c7afd0fd81f3d879911c6744f44e502178a5a7c44a2ce0ac0b"
    - name: "IMAGE_net-istio-webhook__webhook"
      image: "registry.redhat.io/openshift-serverless-1/net-istio-webhook-rhel9@sha256:644bbf85a01ffe935d753ceea1847e84b21d614b2159e4cdf1af05d39620fb56"
    - name: "IMAGE_eventing-controller__eventing-controller"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-controller-rhel9@sha256:cb22545a768c5343eea23a63ffe6463494127833c2d227bdcec44206b706034b"
    - name: "IMAGE_eventing-istio-controller__eventing-istio-controller"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-istio-controller-rhel9@sha256:5706d0acbe002629b6cc4ab070d252ac6df938c5a29317f5ba146d50b1ff109a"
    - name: "IMAGE_eventing-webhook__eventing-webhook"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-webhook-rhel9@sha256:d7b3a03ac3c5faf8f515ce8b115f5475e00b2df5b5509f8bf8ca0cea013030bb"
    - name: "IMAGE_storage-version-migration-eventing-__migrate"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-migrate-rhel9@sha256:0228001b4749c1e2ada84c4e9ad7d9e8b4e466227ebd7051e7f4b1baaa8ff518"
    - name: "IMAGE_mt-broker-controller__mt-broker-controller"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-mtchannel-broker-rhel9@sha256:5efbfbcd115005cbae1aa3db847748c3075f5446e9960aff92f9adae3a6ce3c0"
    - name: "IMAGE_mt-broker-filter__filter"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-filter-rhel9@sha256:f69a9782f45d81da0b6fcac7300925f3fa364333b1224cc2afebd5e75268d412"
    - name: "IMAGE_mt-broker-ingress__ingress"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-ingress-rhel9@sha256:a0b8e77f604272d7d59c34551a614ad5c63b94a0c0cc5a24ec7d547bb6fb9700"
    - name: "IMAGE_imc-controller__controller"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-channel-controller-rhel9@sha256:b1dd98d82f212534be88b2885f4623fa4863a7febc4d9fa20f1c7b034f500fbc"
    - name: "IMAGE_imc-dispatcher__dispatcher"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-channel-dispatcher-rhel9@sha256:65397b4877d4612162c9485ecb23ff6461e1638bf656b50db02cf91aa96c6f09"
    - name: "IMAGE_pingsource-mt-adapter__dispatcher"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-mtping-rhel9@sha256:c869851f6b0abc9e7f2458c104de037b76a03ab0650ff36a3822c47d7a199179"
    - name: "IMAGE_job-sink__job-sink"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-jobsink-rhel9@sha256:0e090f02487a3746090a21796a513b30bf14ea8bb79d5e474a02e321e7ec930a"
    - name: "IMAGE_APISERVER_RA_IMAGE"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-apiserver-receive-adapter-rhel9@sha256:9fdad40fb5f98273d673f8c713e226c816e33cab5ff79751ba99e653a91e1aee"
    - name: "IMAGE_DISPATCHER_IMAGE"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-channel-dispatcher-rhel9@sha256:65397b4877d4612162c9485ecb23ff6461e1638bf656b50db02cf91aa96c6f09"
    - name: "IMAGE_EVENT_TRANSFORM_JSONATA_IMAGE"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-transform-jsonata-rhel9@sha256:84f644fbe19f757ed132023519925541f97ff66aa001fd6e9eaa9c3382dfc305"
    - name: "IMAGE_INTEGRATION_SOURCE_TIMER_IMAGE"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-timer-source-rhel9@sha256:f69c1081456625e144f2216b4dfd088027dbb4aff796ce01d1d3479ab9e776af"
    - name: "IMAGE_INTEGRATION_SOURCE_AWS_S3_IMAGE"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-s3-source-rhel9@sha256:f57373935d4c9593c581b886780cbffc390f6dea5b64123738cd44cb6eb2fb55"
    - name: "IMAGE_INTEGRATION_SOURCE_AWS_SQS_IMAGE"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-sqs-source-rhel9@sha256:40110d0541f573edd34e90bdad03d9bbaf646c7b7bc626e2972e13bc0f2875cb"
    - name: "IMAGE_INTEGRATION_SOURCE_AWS_DDB_STREAMS_IMAGE"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-ddb-streams-source-rhel9@sha256:4d513f8adaf93653f2c70f32843b5f83034ae30dfb2bf0c64d977536bfd38585"
    - name: "IMAGE_INTEGRATION_SINK_LOG_IMAGE"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-log-sink-rhel9@sha256:b33a523f71181580078febeef835bbf4ac29f38ce869d9b504f715d5164bcba7"
    - name: "IMAGE_INTEGRATION_SINK_AWS_S3_IMAGE"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-s3-sink-rhel9@sha256:cbbb950f3405fe415467c11a2f7bd2fb63afa7eba7e90fd548060deec5a0481f"
    - name: "IMAGE_INTEGRATION_SINK_AWS_SQS_IMAGE"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-sqs-sink-rhel9@sha256:8142e26f2681f2de46371961cc76a637513e7c8e32b7aacab855f577436a3080"
    - name: "IMAGE_INTEGRATION_SINK_AWS_SNS_IMAGE"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-integrations-aws-sns-sink-rhel9@sha256:23f1c595d300f1763491774bd53cf51bc29a899071f8a8118f1e83db45d9621f"
    - name: "IMAGE_eventmesh-backend__controller"
      image: "registry.redhat.io/openshift-serverless-1/kn-backstage-plugins-eventmesh-rhel9@sha256:714a313545822c13726255d8766ab5ba5c58146f12f202c781c793fc751b9b23"
    - name: "IMAGE_KUBE_RBAC_PROXY"
      image: "registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:35ea04c339f401902d710bf4ccfe20aa89fc5a4fc7854ed73c8d869450b323ac"
    - name: "IMAGE_KN_PLUGIN_EVENT_SENDER"
      image: "registry.redhat.io/openshift-serverless-1/kn-plugin-event-sender-rhel9@sha256:2d8cfab33f1c46b2d4510ea4b56a09e12b8bcf07c0eb055e84ebc077ec730145"
    - name: "IMAGE_KN_CLIENT"
      image: "registry.redhat.io/openshift-serverless-1/kn-client-kn-rhel9@sha256:58d7a2e94e12f71cafa397650ad892ff5f35470c404ae36f68c0627b87492e46"
    - name: "IMAGE_KN_PLUGIN_FUNC_UTIL"
      image: "registry.redhat.io/openshift-serverless-1/kn-plugin-func-func-util-rhel9@sha256:919aed0783ee6e333f619a7fee1c8ea67b6184c19d0ba1ff75f56eec6cb9042b"
    - name: "IMAGE_KN_PLUGIN_FUNC_TEKTON_BUILDAH"
      image: "registry.redhat.io/rhel8/buildah@sha256:3d505d9c0f5d4cd5a4ec03b8d038656c6cdbdf5191e00ce6388f7e0e4d2f1b74"
    - name: "IMAGE_KN_PLUGIN_FUNC_NODEJS_20_MINIMAL"
      image: "registry.access.redhat.com/ubi8/nodejs-20-minimal@sha256:a2a7e399aaf09a48c28f40820da16709b62aee6f2bc703116b9345fab5830861"
    - name: "IMAGE_KN_PLUGIN_FUNC_OPENJDK_21"
      image: "registry.access.redhat.com/ubi8/openjdk-21@sha256:441897a1f691c7d4b3a67bb3e0fea83e18352214264cb383fd057bbbd5ed863c"
    - name: "IMAGE_KN_PLUGIN_FUNC_PYTHON_39"
      image: "registry.access.redhat.com/ubi8/python-39@sha256:27e795fd6b1b77de70d1dc73a65e4c790650748a9cfda138fdbd194b3d6eea3d"
    - name: "KAFKA_IMAGE_kafka-broker-receiver__kafka-broker-receiver"
      image: "registry.redhat.io/openshift-serverless-1/kn-ekb-receiver-rhel9@sha256:3154b2079a3ed21edfc804ff4bed1735a2269e9c841d91e009798fd0cb55c5a3"
    - name: "KAFKA_IMAGE_kafka-broker-dispatcher__kafka-broker-dispatcher"
      image: "registry.redhat.io/openshift-serverless-1/kn-ekb-dispatcher-rhel9@sha256:1583268b541adc2321d254dfcacafd380f8051f6e0417ab7c18a928f835af136"
    - name: "KAFKA_IMAGE_kafka-channel-receiver__kafka-channel-receiver"
      image: "registry.redhat.io/openshift-serverless-1/kn-ekb-receiver-rhel9@sha256:3154b2079a3ed21edfc804ff4bed1735a2269e9c841d91e009798fd0cb55c5a3"
    - name: "KAFKA_IMAGE_kafka-channel-dispatcher__kafka-channel-dispatcher"
      image: "registry.redhat.io/openshift-serverless-1/kn-ekb-dispatcher-rhel9@sha256:1583268b541adc2321d254dfcacafd380f8051f6e0417ab7c18a928f835af136"
    - name: "KAFKA_IMAGE_kafka-controller__controller"
      image: "registry.redhat.io/openshift-serverless-1/kn-ekb-kafka-controller-rhel9@sha256:61d685d51f5a4715c202ec09b85d2771f139d11c2629156be31023530fbdefd8"
    - name: "KAFKA_IMAGE_kafka-sink-receiver__kafka-sink-receiver"
      image: "registry.redhat.io/openshift-serverless-1/kn-ekb-receiver-rhel9@sha256:3154b2079a3ed21edfc804ff4bed1735a2269e9c841d91e009798fd0cb55c5a3"
    - name: "KAFKA_IMAGE_kafka-source-dispatcher__kafka-source-dispatcher"
      image: "registry.redhat.io/openshift-serverless-1/kn-ekb-dispatcher-rhel9@sha256:1583268b541adc2321d254dfcacafd380f8051f6e0417ab7c18a928f835af136"
    - name: "KAFKA_IMAGE_kafka-webhook-eventing__kafka-webhook-eventing"
      image: "registry.redhat.io/openshift-serverless-1/kn-ekb-webhook-kafka-rhel9@sha256:2872b50a2263ba7ee84096c8e3b2359f9e1792573af4351edd82d9d5ff3c0bb6"
    - name: "KAFKA_IMAGE_kafka-controller-post-install__post-install"
      image: "registry.redhat.io/openshift-serverless-1/kn-ekb-post-install-rhel9@sha256:11f72387d1328d3de0b0f29dce939f10679103759145f8d5dc22cf80448f8698"
    - name: "KAFKA_IMAGE_knative-kafka-storage-version-migrator__migrate"
      image: "registry.redhat.io/openshift-serverless-1/kn-eventing-migrate-rhel9@sha256:0228001b4749c1e2ada84c4e9ad7d9e8b4e466227ebd7051e7f4b1baaa8ff518"
    - name: "IMAGE_MUST_GATHER"
      image: "registry.redhat.io/openshift-serverless-1/serverless-must-gather-rhel9@sha256:1c65b36d07f9259915705e492b59a244d06da3fad6b17a7be6b49f9728b5fe20"
    - name: "IMAGE_KN_CLIENT_CLI_ARTIFACTS"
      image: "registry.redhat.io/openshift-serverless-1/kn-client-cli-artifacts-rhel9@sha256:3a2daeaba91631cb107cc4de9e01f88e18783fd21329dbf6c6fd0d8616fba4ff"
  replaces: serverless-operator.v1.36.1
  version: 1.37.0
