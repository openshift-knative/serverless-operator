diff --git a/vendor/knative.dev/operator/pkg/apis/operator/base/common.go b/vendor/knative.dev/operator/pkg/apis/operator/base/common.go
index f75bfd430..e644e9df5 100644
--- a/vendor/knative.dev/operator/pkg/apis/operator/base/common.go
+++ b/vendor/knative.dev/operator/pkg/apis/operator/base/common.go
@@ -266,6 +266,14 @@ type DeploymentOverride struct {
 	// Env overrides env vars for the containers.
 	// +optional
 	Env []EnvRequirementsOverride `json:"env,omitempty"`
+
+	// ReadinessProbes overrides readiness probes for the containers.
+	// +optional
+	ReadinessProbes []ProbesRequirementsOverride `json:"readinessProbes,omitempty"`
+
+	// LivenessProbes overrides liveness probes for the containers.
+	// +optional
+	LivenessProbes []ProbesRequirementsOverride `json:"livenessProbes,omitempty"`
 }

 // ServiceOverride defines the configurations of the service to override.
@@ -303,6 +311,45 @@ type EnvRequirementsOverride struct {
 	EnvVars []corev1.EnvVar `json:"envVars,omitempty"`
 }

+// ProbesRequirementsOverride enables the user to override any container's env vars.
+type ProbesRequirementsOverride struct {
+	// The container name
+	Container string `json:"container"`
+	// Number of seconds after the container has started before liveness probes are initiated.
+	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
+	// +optional
+	InitialDelaySeconds int32 `json:"initialDelaySeconds,omitempty" protobuf:"varint,2,opt,name=initialDelaySeconds"`
+	// Number of seconds after which the probe times out.
+	// Defaults to 1 second. Minimum value is 1.
+	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
+	// +optional
+	TimeoutSeconds int32 `json:"timeoutSeconds,omitempty" protobuf:"varint,3,opt,name=timeoutSeconds"`
+	// How often (in seconds) to perform the probe.
+	// Default to 10 seconds. Minimum value is 1.
+	// +optional
+	PeriodSeconds int32 `json:"periodSeconds,omitempty" protobuf:"varint,4,opt,name=periodSeconds"`
+	// Minimum consecutive successes for the probe to be considered successful after having failed.
+	// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
+	// +optional
+	SuccessThreshold int32 `json:"successThreshold,omitempty" protobuf:"varint,5,opt,name=successThreshold"`
+	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
+	// Defaults to 3. Minimum value is 1.
+	// +optional
+	FailureThreshold int32 `json:"failureThreshold,omitempty" protobuf:"varint,6,opt,name=failureThreshold"`
+	// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
+	// The grace period is the duration in seconds after the processes running in the pod are sent
+	// a termination signal and the time when the processes are forcibly halted with a kill signal.
+	// Set this value longer than the expected cleanup time for your process.
+	// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
+	// value overrides the value provided by the pod spec.
+	// Value must be non-negative integer. The value zero indicates stop immediately via
+	// the kill signal (no opportunity to shut down).
+	// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
+	// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
+	// +optional
+	TerminationGracePeriodSeconds *int64 `json:"terminationGracePeriodSeconds,omitempty" protobuf:"varint,7,opt,name=terminationGracePeriodSeconds"`
+}
+
 // Manifest enables the user to specify the links to the manifests' URLs
 type Manifest struct {
 	// The link of the manifest URL
diff --git a/vendor/knative.dev/operator/pkg/apis/operator/base/zz_generated.deepcopy.go b/vendor/knative.dev/operator/pkg/apis/operator/base/zz_generated.deepcopy.go
index 257c3757f..1ba3f9cc5 100644
--- a/vendor/knative.dev/operator/pkg/apis/operator/base/zz_generated.deepcopy.go
+++ b/vendor/knative.dev/operator/pkg/apis/operator/base/zz_generated.deepcopy.go
@@ -263,6 +263,20 @@ func (in *DeploymentOverride) DeepCopyInto(out *DeploymentOverride) {
 			(*in)[i].DeepCopyInto(&(*out)[i])
 		}
 	}
+	if in.ReadinessProbes != nil {
+		in, out := &in.ReadinessProbes, &out.ReadinessProbes
+		*out = make([]ProbesRequirementsOverride, len(*in))
+		for i := range *in {
+			(*in)[i].DeepCopyInto(&(*out)[i])
+		}
+	}
+	if in.LivenessProbes != nil {
+		in, out := &in.LivenessProbes, &out.LivenessProbes
+		*out = make([]ProbesRequirementsOverride, len(*in))
+		for i := range *in {
+			(*in)[i].DeepCopyInto(&(*out)[i])
+		}
+	}
 	return
 }

@@ -474,6 +488,26 @@ func (in *NatssSourceConfiguration) DeepCopy() *NatssSourceConfiguration {
 	in.DeepCopyInto(out)
 	return out
 }
+// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
+func (in *ProbesRequirementsOverride) DeepCopyInto(out *ProbesRequirementsOverride) {
+	*out = *in
+	if in.TerminationGracePeriodSeconds != nil {
+		in, out := &in.TerminationGracePeriodSeconds, &out.TerminationGracePeriodSeconds
+		*out = new(int64)
+		**out = **in
+	}
+	return
+}
+
+// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProbesRequirementsOverride.
+func (in *ProbesRequirementsOverride) DeepCopy() *ProbesRequirementsOverride {
+	if in == nil {
+		return nil
+	}
+	out := new(ProbesRequirementsOverride)
+	in.DeepCopyInto(out)
+	return out
+}

 // DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
 func (in *PrometheusSourceConfiguration) DeepCopyInto(out *PrometheusSourceConfiguration) {

diff --git a/vendor/knative.dev/operator/pkg/reconciler/common/probe_override.go b/vendor/knative.dev/operator/pkg/reconciler/common/probe_override.go
new file mode 100644
index 000000000..5dc90d749
--- /dev/null
+++ b/vendor/knative.dev/operator/pkg/reconciler/common/probe_override.go
@@ -0,0 +1,46 @@
+/*
+Copyright 2022 The Knative Authors
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+    http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+*/
+
+package common
+
+import (
+v1 "k8s.io/api/core/v1"
+"k8s.io/apimachinery/pkg/util/json"
+"knative.dev/operator/pkg/apis/operator/base"
+)
+
+func mergeProbe(override, tgt *v1.Probe) {
+	if override == nil {
+		return
+	}
+	var merged v1.Probe
+	jtgt, _ := json.Marshal(*tgt)
+	_ = json.Unmarshal(jtgt, &merged)
+	jsrc, _ := json.Marshal(*override)
+	_ = json.Unmarshal(jsrc, &merged)
+	jmerged, _ := json.Marshal(merged)
+	_ = json.Unmarshal(jmerged, tgt)
+}
+
+func findProbeOverride(probes []base.ProbesRequirementsOverride, name string) *base.ProbesRequirementsOverride {
+	for _, override := range probes {
+		if override.Container == name {
+			return &override
+		}
+	}
+	return nil
+}
+
