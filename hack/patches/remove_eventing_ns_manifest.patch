diff --git a/vendor/knative.dev/operator/pkg/reconciler/common/stages.go b/vendor/knative.dev/operator/pkg/reconciler/common/stages.go
index b9a7c36de..e39f12f73 100644
--- a/vendor/knative.dev/operator/pkg/reconciler/common/stages.go
+++ b/vendor/knative.dev/operator/pkg/reconciler/common/stages.go
@@ -91,6 +91,15 @@ func AppendInstalled(ctx context.Context, manifest *mf.Manifest, instance v1alph
 	return nil
 }
 
+func FilterNamespace(ns string) Stage {
+	return func(ctx context.Context, manifest *mf.Manifest, component v1alpha1.KComponent) error {
+		*manifest = manifest.Filter(mf.Not(
+			mf.All(mf.ByKind("Namespace"), mf.ByName("knative-eventing")),
+		))
+		return nil
+	}
+}
+
 // ManifestFetcher returns a manifest appropriate for the instance
 type ManifestFetcher func(ctx context.Context, instance v1alpha1.KComponent) (*mf.Manifest, error)
 
diff --git a/vendor/knative.dev/operator/pkg/reconciler/knativeeventing/knativeeventing.go b/vendor/knative.dev/operator/pkg/reconciler/knativeeventing/knativeeventing.go
index 3eb2ccbff..59bc18c3a 100644
--- a/vendor/knative.dev/operator/pkg/reconciler/knativeeventing/knativeeventing.go
+++ b/vendor/knative.dev/operator/pkg/reconciler/knativeeventing/knativeeventing.go
@@ -104,6 +104,7 @@ func (r *Reconciler) ReconcileKind(ctx context.Context, ke *v1alpha1.KnativeEven
 		return err
 	}
 	stages := common.Stages{
+		common.FilterNamespace("knative-eventing"),
 		common.AppendTarget,
 		source.AppendTargetSources,
 		common.AppendAdditionalManifests,
