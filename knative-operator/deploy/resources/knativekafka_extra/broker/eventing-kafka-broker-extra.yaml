# ClusterRole to be able to create resources for namespaced broker
# Kafka controller creates some additional resources, such as ServiceMonitors, in the broker namespace
# when a namespaced broker is created.
# The controller will need the permissions listed in this role.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eventing-kafka-namespaced-broker-additional-resources
rules:
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - list
      - watch
      - update
      - create
      - delete
  - apiGroups:
      - "rbac.authorization.k8s.io"
    resources:
      - clusterrolebindings
      - rolebindings
    verbs:
      - get
      - list
      - watch
      - update
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-kafka-namespaced-broker-additional-resources
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: eventing-kafka-namespaced-broker-additional-resources
subjects:
  - kind: ServiceAccount
    name: kafka-controller
    namespace: knative-eventing

---
# ClusterRole that will be bound to service account `openshift-monitoring/prometheus-k8s` for user namespace.
# With that, Prometheus will be able to scrape metrics from the Kafka broker pods in user namespace.
# ClusterRole is created when KnativeKafka is installed; RoleBinding will be created per-namespace on the fly.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eventing-kafka-knative-prometheus-k8s
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
